[{"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/404.js":"1","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/_app.js":"2","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/_document.js":"3","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/about.js":"4","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/admin_register.js":"5","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/api/hello.js":"6","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/automobile/[product].js":"7","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/automobile/index.js":"8","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/blog/[blog].js":"9","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/blog/index.js":"10","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/contact.js":"11","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/automobile/index.js":"12","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/automobile/upload.js":"13","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/blog/index.js":"14","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/blog/upload.js":"15","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/messages.js":"16","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/profile.js":"17","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/user.js":"18","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/index.js":"19","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/login.js":"20","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/register.js":"21","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/Confirmation.js":"22","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/Footer.js":"23","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/Layout.js":"24","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/admin/Layout.js":"25","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/chart.js":"26","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/loadingOverlay.js":"27","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/Nav.js":"28","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/mainHeader.js":"29","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/mobileHeader.js":"30","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/search.js":"31","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/topHeader.js":"32","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/user/Layout.js":"33"},{"size":875,"mtime":1684144542000,"results":"34","hashOfConfig":"35"},{"size":637,"mtime":1688060212538,"results":"36","hashOfConfig":"35"},{"size":1147,"mtime":1688220218609,"results":"37","hashOfConfig":"35"},{"size":3624,"mtime":1688119138662,"results":"38","hashOfConfig":"35"},{"size":9795,"mtime":1688221768415,"results":"39","hashOfConfig":"35"},{"size":170,"mtime":1684144542000,"results":"40","hashOfConfig":"35"},{"size":5768,"mtime":1688201730617,"results":"41","hashOfConfig":"35"},{"size":9580,"mtime":1688119393732,"results":"42","hashOfConfig":"35"},{"size":4946,"mtime":1687935765158,"results":"43","hashOfConfig":"35"},{"size":4329,"mtime":1688119430731,"results":"44","hashOfConfig":"35"},{"size":9123,"mtime":1687810579376,"results":"45","hashOfConfig":"35"},{"size":7398,"mtime":1688202325448,"results":"46","hashOfConfig":"35"},{"size":11356,"mtime":1688119509351,"results":"47","hashOfConfig":"35"},{"size":3885,"mtime":1687975232085,"results":"48","hashOfConfig":"35"},{"size":6230,"mtime":1688119952986,"results":"49","hashOfConfig":"35"},{"size":4520,"mtime":1688040053747,"results":"50","hashOfConfig":"35"},{"size":3146,"mtime":1688083255810,"results":"51","hashOfConfig":"35"},{"size":6663,"mtime":1687599115734,"results":"52","hashOfConfig":"35"},{"size":1588,"mtime":1688085433370,"results":"53","hashOfConfig":"35"},{"size":4517,"mtime":1687935541822,"results":"54","hashOfConfig":"35"},{"size":10308,"mtime":1687938119497,"results":"55","hashOfConfig":"35"},{"size":1239,"mtime":1684144542000,"results":"56","hashOfConfig":"35"},{"size":5522,"mtime":1688084959527,"results":"57","hashOfConfig":"35"},{"size":1251,"mtime":1687447282599,"results":"58","hashOfConfig":"35"},{"size":6133,"mtime":1688118420567,"results":"59","hashOfConfig":"35"},{"size":713,"mtime":1684144542000,"results":"60","hashOfConfig":"35"},{"size":248,"mtime":1687267845345,"results":"61","hashOfConfig":"35"},{"size":460,"mtime":1684144542000,"results":"62","hashOfConfig":"35"},{"size":6859,"mtime":1687856150438,"results":"63","hashOfConfig":"35"},{"size":19762,"mtime":1684144542000,"results":"64","hashOfConfig":"35"},{"size":829,"mtime":1684144542000,"results":"65","hashOfConfig":"35"},{"size":1124,"mtime":1684144542000,"results":"66","hashOfConfig":"35"},{"size":5750,"mtime":1687090915475,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ckl5cv",{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/404.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/_app.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/_document.js",["183","184","185","186","187","188","189","190"],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/about.js",["191","192","193"],[],"import Layout from \"../components/Layout\";\nimport React, { Fragment } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nexport default function AboutUs() {\n  return (\n    <Fragment>\n      <Layout title=\"About Us - Landing\">\n        <div id=\"about\">\n          <div className=\"d1\">\n            <span className=\"sp1\">\n              <h1>TAHARISH SYNERGY SERVICES LIMITED</h1>\n              <p>VEHICLES SERVICES, REPAIRS, AND MAINTENANCE</p>\n            </span>\n            <span className=\"sp2\">\n              <p>\n                {\" \"}\n                Tahaish Synergy Services Limited is a leading provider of\n                vehicle services, repairs and maintenace in Nigeria. Established\n                in 2015, we have built a reputation for delivering exceptional\n                automotive solutions to our customers.\n              </p>\n            </span>\n          </div>\n          <div className=\"d2\">\n            <Carousel controls={false}>\n              <Carousel.Item interval={2500}>\n                <img\n                  className=\"blur-up lazyload bg-img land-image-slider\"\n                  src=\"/images/rangerover.jpg\"\n                  alt=\"taharish\"\n                  title=\"taharish\"\n                  style={{\n                    width: \"100%\",\n                    height: \"60vh!important\",\n                    objectFit: \"cover\",\n                  }}\n                />\n              </Carousel.Item>\n              <Carousel.Item interval={2500}>\n                <img\n                  className=\"blur-up lazyload bg-img land-image-slider\"\n                  src=\"/images/rangerover2.jpg\"\n                  alt=\"taharish\"\n                  title=\"taharish\"\n                  style={{\n                    width: \"100%\",\n                    height: \"60vh!important\",\n                    objectFit: \"cover\",\n                  }}\n                />\n              </Carousel.Item>\n              <Carousel.Item interval={2500}>\n                <img\n                  className=\"blur-up lazyload bg-img land-image-slider\"\n                  src=\"/images/car2.jpg\"\n                  alt=\"taharish\"\n                  title=\"taharish\"\n                  style={{\n                    width: \"100%\",\n                    height: \"60vh!important\",\n                    objectFit: \"cover\",\n                  }}\n                />\n              </Carousel.Item>\n            </Carousel>\n          </div>\n          <div className=\"d3\">\n            <span className=\"sp1\">\n              <h1>Our&nbsp;Experience</h1>\n            </span>\n            <span className=\"sp2\">\n              <p>\n                We have been serving customers for several years and has a solid\n                experience in providing a wide range of automotive repair and\n                maintenance services with a focus on customer satisfaction and\n                using technology.\n              </p>\n            </span>\n          </div>\n\n          <div className=\"d4\">\n            <h1>Our&nbsp;Services</h1>\n            <ul>\n              <li>Car sales</li>\n              <li>Vehicle Inspection</li>\n              <li>Mechanical Repairs</li>\n              <li>Electrical Repairs</li>\n              <li>Wheel Services</li>\n              <li>Exhaust Systems</li>\n              <li>Brake Systems</li>\n              <li>Engine Overhaul and Replacement</li>\n              <li>Transmission Overhauling and Replacement</li>\n              <li>Transmission Overhaul and Repacement</li>\n              <li>Heat, Ventilation, Air condition (H-VAC) Services</li>\n            </ul>\n          </div>\n        </div>\n      </Layout>\n    </Fragment>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/admin_register.js",["194","195"],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/api/hello.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/automobile/[product].js",["196","197","198"],[],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { useRouter } from \"next/router\";\nimport { Alert } from \"react-bootstrap\";\nimport PageAuthentication from \"../../hooks/useAuth\";\nimport FetchApiClient from \"../../fetch_api_clients/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport LoadingOverlay from \"../../components/loadingOverlay\";\n\nexport default function Cart() {\n  const router = useRouter();\n  const { query } = router;\n  const { product } = query;\n  const [data, setData] = useState({});\n  // const [error, setError] = useState();\n  const [imagetoshow, setImagetoshow] = useState(0);\n  // const [checkcopy, setCheckCopy] = useState(false);\n  const [paymentloading, setPaymentLoading] = useState(false);\n\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n  let apiClient = new FetchApiClient(\"/automobile\", token);\n\n  useEffect(() => {\n    const fetchAutomobile = async () => {\n      let { response } = await apiClient.get(`/${product}`);\n      if (response) setData(response);\n    };\n\n    fetchAutomobile();\n  }, [product]);\n\n  //making payment for car\n  const makePayment = async () => {\n    setPaymentLoading(true);\n    let { response } = await apiClient.get(\"/payment/automobile\");\n\n    if (response) {\n      if (window !== undefined) window.location.replace(`${response}`);\n      setPaymentLoading(false);\n    } else {\n      setPaymentLoading(false);\n      toast.error(\"unable to make payment\");\n    }\n  };\n\n  // function handleCopy(copy_code) {\n  //   if (navigator.clipboard && navigator.clipboard.writeText) {\n  //     navigator.clipboard\n  //       .writeText(copy_code)\n  //       .then(() => {\n  //         setCheckCopy(true);\n  //         console.log(\"URL copied to clipboard!\");\n  //       })\n  //       .catch((error) => {\n  //         console.error(\"Failed to copy URL to clipboard:\", error);\n  //       });\n  //   } else {\n  //     fallbackCopyToClipboard(copy_code);\n  //   }\n  // }\n\n  // function fallbackCopyToClipboard(copy_code) {\n  //   const textArea = document.createElement(\"textarea\");\n  //   textArea.value = copy_code;\n  //   document.body.appendChild(textArea);\n  //   textArea.select();\n  //   document.execCommand(\"copy\");\n  //   document.body.removeChild(textArea);\n  //   setCheckCopy(true);\n  // }\n\n  return (\n    <PageAuthentication>\n      <Layout title=\"Automobile\">\n        {data ? (\n          <div className=\"container\" id=\"shop\">\n            <div>\n              <div className=\"auto_head\">\n                <h1 className=\"auto_name\">{data?.title}</h1>\n                <p className=\"auto_price\">#{data?.price}</p>\n              </div>\n              <div className=\"auto_img\">\n                <span className=\"auto_pics_main\">\n                  {typeof data.files === \"string\" ? (\n                    <img\n                      className=\"d-block\"\n                      src={JSON.parse(data?.files)[imagetoshow]}\n                      alt=\"Image One\"\n                      style={{ width: \"100%\" }}\n                    />\n                  ) : null}\n                </span>\n                <span className=\"auto_pics_sub\">\n                  {typeof data.files === \"string\"\n                    ? JSON.parse(data?.files).map((file, i) => (\n                        <img\n                          className=\"d-block\"\n                          src={file}\n                          alt=\"Image One\"\n                          style={{ width: \"100%\" }}\n                          onClick={() => setImagetoshow(i)}\n                          key={i}\n                        />\n                      ))\n                    : null}\n                </span>\n              </div>\n\n              <div className=\"auto_description\">\n                <h3>Description</h3>\n                <p>{data?.description}</p>\n              </div>\n\n              <div className=\"auto_seller_details\">\n                <div className=\"d1\">\n                  <table className=\"table table-striped\">\n                    <thead className=\"thead-dark\">\n                      <tr>\n                        <th>MODEL</th>\n                        <th>YEAR</th>\n                        <th>CATEGORY</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>{data?.model}</td>\n                        <td>{data?.year_of_manufacture}</td>\n                        <td>{data?.category}</td>\n                      </tr>\n                    </tbody>\n                    <thead className=\"thead-dark\">\n                      <tr>\n                        <th>CONDITION</th>\n                        <th>MATERIAL</th>\n                        <th>DATE UPLOADED</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>{data?.conditions}</td>\n                        <td>{data?.material}</td>\n                        <td>{new Date(data?.created_at).toDateString()}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                {paymentloading ? (\n                  <LoadingOverlay />\n                ) : (\n                  <div className=\"d2\">\n                    <p onClick={makePayment}>MAKE PAYMENT</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <Alert\n            key=\"danger\"\n            variant=\"danger\"\n            style={{ margin: \"200px 100px\" }}\n          >\n            loading...\n          </Alert>\n        )}\n      </Layout>\n    </PageAuthentication>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/automobile/index.js",["199","200","201","202"],[],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { Spinner } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../../store/store\";\nimport { shortenString } from \"../../utils/stringManipulation\";\nimport { getInitials } from \"../../utils/stringManipulation\";\nimport jwtDecode from \"jwt-decode\";\n\nexport default function Shop() {\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n\n  const dispatch = useDispatch();\n  const { data, isLoading } = useSelector((state) => state);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(6);\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  // let currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n  const totalPages = Math.ceil(data?.length / itemsPerPage);\n  const [user, setUser] = useState({});\n  // const [allData, setAllData] = useState([]);\n\n  const [currentItems, setCurrentItems] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   setAllData(data);\n  // }, [currentPage]);\n\n  useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    const updatedCurrentItems = data?.slice(indexOfFirstItem, indexOfLastItem);\n    setCurrentItems(updatedCurrentItems);\n  }, [data, currentPage, itemsPerPage, indexOfFirstItem, indexOfLastItem]);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  function searchData(name, e) {\n    if (name == \"name\") {\n      if (e == \"\" || e == \"Other\")\n        setCurrentItems(() => data?.slice(indexOfFirstItem, indexOfLastItem));\n      else {\n        setCurrentItems(\n          data.filter(\n            (product) =>\n              product.name?.toLowerCase().includes(e.toLowerCase()) ||\n              product.model?.toLowerCase().includes(e.toLowerCase()) ||\n              product.name?.toLowerCase().includes(e.toLowerCase()) ||\n              product.category?.toLowerCase().includes(e.toLowerCase())\n          )\n        );\n      }\n    }\n  }\n\n  return (\n    <Layout title=\"Shop - Market\">\n      <div className=\"market_search-input\">\n        <em\n          style={{\n            color: \"white\",\n            background: \"green\",\n            borderRadius: \"50%\",\n            padding: \"3px\",\n          }}\n          className=\"market_icon-left\"\n        >\n          {user?.firstName && user?.lastName\n            ? getInitials(user?.firstName, user?.lastName)\n            : null}\n        </em>\n        <input\n          type=\"text\"\n          placeholder=\"Search Car...\"\n          className=\"market_input-field\"\n          onChange={(e) => searchData(\"name\", e.target.value)}\n        />\n        <span className=\"market_icon-right\">\n          <img\n            width=\"24\"\n            height=\"24\"\n            src=\"https://img.icons8.com/material-outlined/24/search--v1.png\"\n            alt=\"search--v1\"\n          />\n        </span>\n      </div>\n\n      {data ? (\n        <div className=\"grid-products row\">\n          <div className=\" col-lg-6 container\">\n            <br />\n            <br />\n          </div>\n          <div className=\"row container\">\n            {isLoading ? (\n              <div className=\"section text-center col-12\">\n                <Spinner animation=\"grow\" role=\"status\" variant=\"danger\">\n                  <span className=\"text-center\">Loading...</span>\n                </Spinner>\n              </div>\n            ) : (\n              currentItems?.map((product, i) => (\n                <Link href={`/automobile/${product?.id}`} key={i}>\n                  <div\n                    className=\"col-12 col-sm-6 col-md-4  item grid-view-item style2\"\n                    style={{ cursor: \"pointer\" }}\n                  >\n                    <div className=\"grid-view_image\">\n                      {/*<!-- start product image -->*/}\n                      <div\n                        className=\"grid-view-item__link\"\n                        style={{\n                          borderRadius: \"12px\",\n                          border: \"0.5px solid #cacdd1\",\n                        }}\n                      >\n                        <img\n                          className=\"grid-view-item__image primary blur-up lazyload\"\n                          src={JSON.parse(product?.files)[0]}\n                          alt=\"image\"\n                          title=\"product\"\n                          style={{ height: \"250px\" }}\n                        />\n                        {/*<!-- End image -->*/}\n                        {/*<!-- Hover image -->*/}\n                        <img\n                          className=\"grid-view-item__image hover blur-up lazyload\"\n                          src={\n                            JSON.parse(product.files)[1]\n                              ? JSON.parse(product.files)[1]\n                              : JSON.parse(product.files)[0]\n                          }\n                          alt=\"image\"\n                          title=\"product\"\n                          style={{ height: \"250px\" }}\n                        />\n\n                        <div className=\"product-labels rectangular\">\n                          <span\n                            className=\"\"\n                            style={{\n                              background: \"black\",\n                              color: \"white\",\n                              padding: \"1px 5px\",\n                              margin: \"3px 0px\",\n                            }}\n                            title={product?.category}\n                          >\n                            {shortenString(product?.category, 20)}\n                          </span>{\" \"}\n                          <span\n                            style={{\n                              background: \"green\",\n                              color: \"white\",\n                              padding: \"1px 5px\",\n                              margin: \"3px 0px\",\n                            }}\n                          >\n                            {product?.conditions}\n                          </span>\n                        </div>\n                        {/*<!-- End product label -->*/}\n                      </div>\n                      {/*<!-- end product image -->*/}\n                      {/*<!--start product details -->*/}\n                      <div className=\"product-details text-center mobile\">\n                        {/*<!-- product name -->*/}\n                        <div\n                          className=\"product-name\"\n                          style={{\n                            fontFamily: \"Roboto\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            fontSize: \"28px\",\n                            lineHeight: \"38px\",\n                            color: \" #7e7570\",\n                          }}\n                        >\n                          <span>{product?.model}</span>\n                        </div>\n                        {/*<!-- End product name -->*/}\n                        {/*<!-- product price -->*/}\n                        <div className=\"product-price\">\n                          <span\n                            className=\"price\"\n                            style={{\n                              fontFamily: \"Roboto\",\n                              fontStyle: \"normal\",\n                              fontWeight: \"500\",\n                              fontSize: \"23px\",\n                              lineHeight: \"38px\",\n                              color: \"black\",\n                            }}\n                          >\n                            &#8358;{product?.price}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Link>\n              ))\n            )}\n          </div>\n          <div className=\"col-12 text-center\">\n            <ul className=\"pagination justify-content-center\">\n              <li\n                className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}\n              >\n                <button\n                  className=\"page-link\"\n                  onClick={() => paginate(currentPage - 1)}\n                >\n                  Previous\n                </button>\n              </li>\n              {Array.from({ length: totalPages }, (_, i) => (\n                <li\n                  key={i + 1}\n                  className={`page-item ${\n                    currentPage === i + 1 ? \"active\" : \"\"\n                  }`}\n                >\n                  <button className=\"page-link\" onClick={() => paginate(i + 1)}>\n                    {i + 1}\n                  </button>\n                </li>\n              ))}\n              <li\n                className={`page-item ${\n                  currentPage === totalPages ? \"disabled\" : \"\"\n                }`}\n              >\n                <button\n                  className=\"page-link\"\n                  onClick={() => paginate(currentPage + 1)}\n                >\n                  Next\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      ) : (\n        <p className=\"page-width text-center\"> No uploaded item yet</p>\n      )}\n    </Layout>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/blog/[blog].js",["203","204","205","206","207","208","209"],[],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport { useRouter } from \"next/router\";\nimport FetchApiClient from \"../../fetch_api_clients/api\";\nimport { toast } from \"react-toastify\";\n\nexport default function SingleBlog() {\n  let apiClient = new FetchApiClient(\"/blog\");\n  const router = useRouter();\n  const { query } = router;\n  const { blog } = query;\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchSingleBlog = async () => {\n      console.log(blog);\n      if (blog != undefined) {\n        let { response, error } = await apiClient.get(`/${blog}`);\n        console.log(response);\n        if (error) toast.error(\"unable to fetch blog, refresh\");\n        else setData(response);\n      }\n    };\n\n    fetchSingleBlog();\n  }, [blog]);\n\n  return (\n    <Layout>\n      <div id=\"blog\">\n        {data?.map((blog) => (\n          <>\n            <h1\n              style={{\n                fontSize: \"40px\",\n                fontWeight: \"bolder\",\n                margin: \"10px\",\n                textAlign: \"center\",\n                opacity: \"0.6\",\n                padding: \"10px\",\n              }}\n              className=\"mx-3 mx-lg-5\"\n            >\n              {`${blog?.name}`}\n            </h1>\n\n            <section className=\"blog_body_main\">\n              <div>\n                <div className=\"d1\">\n                  {blog?.introduction ? <h3>Introduction</h3> : null}\n\n                  <p>{<pre>{`${JSON.parse(blog?.introduction).name}`}</pre>}</p>\n                  {blog?.introduction && (\n                    <img src={`${JSON.parse(blog?.introduction).imageurl}`} />\n                  )}\n                </div>\n                <div className=\"d2\">\n                  <img />\n                </div>\n                <div className=\"d3\">\n                  <span>\n                    <img />\n                  </span>\n                  <span></span>\n                </div>\n\n                {blog?.sub_heading &&\n                  JSON.parse(blog?.sub_heading).map((sub) => (\n                    <>\n                      <div className=\"d6\">\n                        <h6>{sub?.title}</h6>\n                        <p>\n                          <pre>{sub?.body}</pre>\n                        </p>\n                      </div>\n                      <div className=\"d7\">\n                        <img src={sub?.imageurl} />\n                      </div>\n                    </>\n                  ))}\n\n                <div className=\"d9\">\n                  <h5>Conclusion</h5>\n                  <p>{blog?.conclusion}</p>\n                </div>\n              </div>\n\n              <div>\n                <p>Written @ {new Date(blog?.created_at).toDateString()}</p>\n              </div>\n              <hr />\n            </section>\n\n            <section className=\"blog_footer\">\n              <div>\n                <div className=\"latest\">\n                  <h6>Taharish blog</h6>\n                  <h3>From the blog</h3>\n                  <p>\n                    The latest industry news, interviews, technologies, and\n                    resources.\n                  </p>\n                  <button>View all Blogs</button>\n                </div>\n                {/* <div className=\"more_blogs\">\n                  <div>\n                    <div>\n                      <img />\n                      <p className=\"p1\">Design 8min read</p>\n                      <h5>UX review presentations</h5>\n                      <p className=\"p2\">\n                        How do you create compelling presentations that wow your\n                        colleagues and impress your managers?\n                      </p>\n                      <span className=\"wrote_by\">\n                        <img width={50} />\n                        <p>\n                          <b>mgenius</b>\n                          <em>20 Jan 2022</em>\n                        </p>\n                      </span>\n                    </div>\n                    <div>\n                      <img />\n                      <p className=\"p1\">Product 10min read</p>\n\n                      <h5>UX review presentations</h5>\n                      <p className=\"p2\">\n                        How do you create compelling presentations that wow your\n                        colleagues and impress your managers?\n                      </p>\n                      <span className=\"wrote_by\">\n                        <img width={50} />\n                        <p>\n                          <b>teknesis</b>\n                          <em>20 Jan 2022</em>\n                        </p>\n                      </span>\n                    </div>\n                  </div>\n                  <aside>\n                    <img className=\"prev\" />\n                    <img className=\"next\" />\n                  </aside>\n                </div> */}\n              </div>\n            </section>\n          </>\n        ))}\n      </div>\n    </Layout>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/blog/index.js",["210","211","212","213"],[],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport FetchApiClient from \"../../fetch_api_clients/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Carousel } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport { shortenString } from \"../../utils/stringManipulation\";\n\nconst BlogList = () => {\n  const [blogs, setBlogs] = useState([]);\n\n  let apiClient = new FetchApiClient(\"/blog\");\n\n  useEffect(() => {\n    const fetchAllBlog = async () => {\n      let { response } = await apiClient.get(\"\");\n      if (response) setBlogs(response);\n      else {\n        toast.error(\"unable to fetch blog data\");\n      }\n    };\n    fetchAllBlog();\n  }, []);\n\n  return (\n    <Layout>\n      <Carousel style={{ background: \"black\" }}>\n        <Carousel.Item interval={2500}>\n          <img\n            className=\"blur-up lazyload bg-img land-image-slider\"\n            src=\"/images/rangerover2.jpg\"\n            alt=\"automobile\"\n            title=\"automobile\"\n          />\n          <Carousel.Caption>\n            <div className=\"\">\n              <h2 className=\"h1 mega-title slideshow__title\">\n                <b style={{ color: \"green\" }}>Taharish</b>{\" \"}\n                <b className=\"land-text-slider\">Automobile</b>\n              </h2>\n            </div>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item interval={2500}>\n          <img\n            className=\"blur-up lazyload bg-img land-image-slider\"\n            src=\"/images/rangerover.jpg\"\n            alt=\"autombile\"\n            title=\"automobile\"\n          />\n          <Carousel.Caption>\n            <div className=\"\">\n              <h2 className=\"h1 mega-title slideshow__title\">\n                <b className=\"land-text-slider\">CHECK OUR BLOGS</b>\n              </h2>\n            </div>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      <div className=\"container\">\n        <div className=\"d-flex align-items-center m-5 justify-content-center\">\n          <h1 style={{ fontSize: \"35px\", fontWeight: \"bolder\" }}>\n            All Blog Content\n          </h1>\n          <p className=\"text-muted mx-3\" style={{ fontSize: \"14px\" }}>\n            Check and Read all our blogs <br /> about cars\n          </p>\n        </div>\n        <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 \">\n          {blogs.map((blog) => (\n            <div key={blog.id} className=\"col-12 col-lg-6 mb-5\">\n              <div\n                className=\"card h-100\"\n                style={{\n                  borderRadius: \"20px\",\n                  background: \"#e0e0e05c\",\n                  border: \"none\",\n                }}\n              >\n                <div className=\"row g-0\">\n                  <div className=\"col-md-5\">\n                    <img\n                      src={\"/images/car.png\"}\n                      alt={blog.name}\n                      className=\"img-fluid rounded-start\"\n                    />\n                  </div>\n                  <div className=\"col-md-7\">\n                    <div className=\"card-body\">\n                      <h5\n                        className=\"card-title\"\n                        style={{ fontWeight: \"bolder\" }}\n                      >\n                        {blog.name}\n                      </h5>\n                      <p className=\"card-text\">\n                        {shortenString(blog.description, 200)}\n                      </p>\n                    </div>\n                    <div className=\"card-footer\">\n                      <Link href={`/blog/${blog.id}`}>\n                        <p\n                          style={{\n                            backgroundColor: \"black\",\n                            borderRadius: \"8px\",\n                            color: \"white\",\n                            padding: \"10px 17px\",\n                            textAlign: \"center\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          Read More\n                        </p>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogList;\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/contact.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/automobile/index.js",["214","215","216","217"],[],"import React, { useState, useEffect } from \"react\";\nimport AdminLayout from \"../../../../components/admin/Layout\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useRouter } from \"next/router\";\nimport ConfirmationInput from \"../../../../components/Confirmation\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Carousel } from \"react-bootstrap\";\nimport Link from \"next/link\";\nimport FetchApiClient from \"../../../../fetch_api_clients/api\";\n\nconst AutoMobile = () => {\n  const router = useRouter();\n\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n\n  let apiClient = new FetchApiClient(\"/automobile\", token);\n\n  const [data, setData] = useState([]);\n  // const [items, setItems] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalData, setModalData] = useState();\n\n  //to display confirmation input\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n  const [hideConfirmationModal, setHideConfirmationModal] = useState(true);\n\n  useEffect(() => {\n    const fetchLogistics = async () => {\n      let { response } = await apiClient.get(\"\");\n\n      if (response) {\n        setData(response);\n      } else {\n        toast.error(\"fail to fetch data\");\n      }\n    };\n    fetchLogistics();\n  }, []);\n\n  const handleModalOpen = (item) => {\n    setShowModal(true);\n    setModalData(item);\n  };\n  const handleModalClose = () => setShowModal(false);\n\n  const deletePackage = async () => {\n    let { response } = await apiClient.delete(`/${modalData?.id}`);\n\n    if (response) {\n      toast.success(response);\n      router.reload();\n    } else {\n      toast.error(\"delete failed\");\n    }\n  };\n  return (\n    <AdminLayout>\n      <div className=\"table-responsive\">\n        <div className=\"d-flex justify-content-between align-items-center m-3\">\n          <h1>AUTOMOBILES</h1>\n          <Link href=\"/dashboard/admin/automobile/upload\">\n            <button className=\"btn text-right text-white\">\n              Add CAR/PARTS{\" \"}\n              <img\n                src=\"https://img.icons8.com/ios/50/add.png\"\n                className=\"icon\"\n              />\n            </button>\n          </Link>\n        </div>\n\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">NAME</th>\n              <th scope=\"col\">TYPE</th>\n              <th scope=\"col\">CONDITIONS</th>\n              <th scope=\"col\">PRICE</th>\n              <th scope=\"col\">DATE</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((item) => (\n              <tr\n                key={item?.id}\n                onClick={() => handleModalOpen(item)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <td>{item?.name}</td>\n                <td>{item?.type}</td>\n                <td>{item?.conditions}</td>\n                <td>{item?.price}</td>\n                <td>{new Date(item?.created_at).toDateString()}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div style={{ overflow: \"auto\" }}>\n        <Modal show={showModal} onHide={handleModalClose}>\n          <Modal.Header closeButton>\n            <Modal.Title\n              style={{\n                fontSize: \"1.3rem\",\n                fontWeight: \"bold\",\n                lineHeight: \"1.5\",\n                color: \"#3c171773\",\n              }}\n            >\n              AUTOMOBILE DETAILS\n            </Modal.Title>\n            <br />\n          </Modal.Header>\n          <Modal.Body>\n            <Carousel className=\"w-screen\">\n              {typeof modalData?.files == \"string\"\n                ? JSON.parse(modalData?.files).map((image, index) => (\n                    <Carousel.Item key={index}>\n                      <img\n                        className=\"d-block w-100\"\n                        src={image}\n                        alt={`Product ${modalData.title}`}\n                        style={{ height: \"auto\" }}\n                      />\n                    </Carousel.Item>\n                  ))\n                : null}\n            </Carousel>{\" \"}\n            <br />\n            <table className=\"table\">\n              <thead\n                style={{\n                  fontSize: \"1.3rem\",\n                  fontWeight: \"bold\",\n                  lineHeight: \"1.5\",\n                }}\n              >\n                Product&nbsp;Details\n              </thead>{\" \"}\n              <br />\n              <tbody>\n                <tr>\n                  <th>PRODUCT ID</th>\n                  <td>{modalData?.id}</td>\n                </tr>\n\n                <tr>\n                  <th>Name</th>\n                  <td>{modalData?.name}</td>\n                </tr>\n                <tr>\n                  <th>Type</th>\n                  <td>{modalData?.type}</td>\n                </tr>\n                <tr>\n                  <th>Category</th>\n                  <td>{modalData?.category}</td>\n                </tr>\n                <tr>\n                  <th>Conditions</th>\n                  <td>{modalData?.conditions}</td>\n                </tr>\n\n                <tr>\n                  <th>Manufacturer</th>\n                  <td>{modalData?.manufacturer}</td>\n                </tr>\n                <tr>\n                  <th>Year of manufacture</th>\n                  <td>{modalData?.year_of_manufacture}</td>\n                </tr>\n                <tr>\n                  <th>Material</th>\n                  <td>{modalData?.material}</td>\n                </tr>\n                <tr>\n                  <th>Price</th>\n                  <td>{modalData?.price}</td>\n                </tr>\n              </tbody>\n              <hr />\n              <tfoot>\n                <th>Date Uploaded</th>\n                <td>{new Date(modalData?.created_at).toLocaleString()}</td>\n              </tfoot>\n              <tfoot>\n                <th>Description</th>\n                <td>{modalData?.description}</td>\n              </tfoot>\n            </table>\n          </Modal.Body>\n\n          <Modal.Footer className=\"justify-content-start\">\n            <Button\n              variant=\"danger\"\n              onClick={() => {\n                handleModalClose();\n                setHideConfirmationModal(true);\n                setDeleteConfirmation(true);\n              }}\n              style={{ background: \"red\", color: \"white\" }}\n            >\n              Delete\n            </Button>\n          </Modal.Footer>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleModalClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {deleteConfirmation ? (\n          <Modal show={hideConfirmationModal}>\n            <ConfirmationInput\n              setConfirmation={setDeleteConfirmation}\n              action={deletePackage}\n              title={`to delete package of id :.'${modalData?.id}'`}\n            />\n\n            <Modal.Footer>\n              <Button\n                variant=\"error\"\n                onClick={() => setHideConfirmationModal(false)}\n              >\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        ) : null}\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default AutoMobile;\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/automobile/upload.js",["218"],[],"import React, { useState, useEffect } from \"react\";\nimport AdminLayout from \"../../../../components/admin/Layout\";\nimport { useForm } from \"react-hook-form\";\n// import { useMutation } from 'react-query';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ImageUpload from \"../../../../utils/fileupload\";\nimport LoadingOverlay from \"../../../../components/loadingOverlay\";\nimport { useRouter } from \"next/router\";\n\nimport {\n  Categories,\n  Condition,\n  Materials,\n  Years,\n} from \"../../../../utils/data\";\n\nimport FetchApiClient from \"../../../../fetch_api_clients/api\";\n\nexport default function Logistics() {\n  const router = useRouter();\n  const [data, setData] = useState({});\n  const [imageUrl, setImageUrl] = useState([]);\n\n  const [fileUploadError, setFileUploadError] = useState();\n  const [isLoading, setIsLoading] = useState();\n\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n\n  let apiClient = new FetchApiClient(\"/automobile\", token);\n\n  useEffect(() => {\n    toast.error(fileUploadError);\n    setData({ ...data, [\"files\"]: JSON.stringify(imageUrl) });\n  }, [imageUrl]);\n\n  const { handleSubmit } = useForm();\n\n  const handleInputChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const submitPackageDetails = async () => {\n    let { response, error } = await apiClient.post(\"\", data);\n    if (response) {\n      setIsLoading(false);\n      toast.success(\"successfully posted\");\n      router.push(\"/dashboard/admin/automobile\");\n    } else {\n      setIsLoading(false);\n      toast.error(error);\n    }\n  };\n\n  return (\n    <AdminLayout>\n      <div id=\"page-content\" style={{ margin: \"50px 0px\" }}>\n        <div className=\"page section-header text-center\">\n          <div className=\"page-title\">\n            <div className=\"wrapper\">\n              <h1\n                className=\"page-width\"\n                style={{ fontWeight: \"bolder\", fontSize: \"20px\" }}\n              >\n                {\" \"}\n                Add Automobile\n              </h1>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 mb-3\">\n              <div className=\"customer-box returning-customer\">\n                <div\n                  id=\"customer-login\"\n                  className=\"collapse customer-content\"\n                ></div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row billing-fields\">\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 sm-margin-30px-bottom\">\n              <div className=\"create-ac-content bg-light-gray padding-20px-all\">\n                <form onSubmit={handleSubmit(submitPackageDetails)}>\n                  <fieldset>\n                    <h2 className=\"login-title mb-3\">Automobile Details</h2>\n                    <ImageUpload\n                      setFileUploadError={setFileUploadError}\n                      setImageUrl={setImageUrl}\n                      maxImages={3}\n                      maxSizes={5242880}\n                    />\n                  </fieldset>\n                  <hr />\n                  <br />\n                  <fieldset>\n                    <div className=\"row\">\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"type\">\n                          Automobile type\n                          <span className=\"required-f\">*</span>\n                        </label>\n                        <select\n                          name=\"type\"\n                          id=\"type\"\n                          required\n                          onChange={handleInputChange}\n                        >\n                          <option disabled selected>\n                            --- Please Select ---\n                          </option>\n\n                          <option value=\"car\">Car</option>\n                          <option value=\"part\">Car Parts</option>\n                        </select>\n                      </div>\n\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"input-model\">\n                          Name <span className=\"required-f\">*</span>\n                        </label>\n                        <input\n                          name=\"name\"\n                          id=\"input-model\"\n                          type=\"text\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"input-model\">\n                          Manufacturer <span className=\"required-f\">*</span>\n                        </label>\n                        <input\n                          name=\"manufacturer\"\n                          id=\"input-model\"\n                          type=\"text\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"input-model\">Model</label>\n                        <input\n                          name=\"model\"\n                          id=\"input-model\"\n                          type=\"text\"\n                          onChange={handleInputChange}\n                        />\n                      </div>\n\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"year_of_manufacture\">\n                          Year of Manufacturer{\" \"}\n                        </label>\n                        <select\n                          name=\"year_of_manufacture\"\n                          id=\"year_of_manufacture\"\n                          onChange={handleInputChange}\n                        >\n                          <option disabled selected>\n                            {\" \"}\n                            --- Please Select ---{\" \"}\n                          </option>\n                          {Years?.map((year, i) => (\n                            <option value={year} key={i}>\n                              {year}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"category\">\n                          Category <span className=\"required-f\">*</span>\n                        </label>\n                        <select\n                          name=\"category\"\n                          id=\"category\"\n                          required\n                          onChange={handleInputChange}\n                        >\n                          <option disabled selected>\n                            {\" \"}\n                            --- Please Select ---{\" \"}\n                          </option>\n                          {Categories?.map((category, i) => (\n                            <option value={category} key={i}>\n                              {category}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"material\">\n                          Material <span className=\"required-f\">*</span>\n                        </label>\n                        <select\n                          name=\"material\"\n                          id=\"material\"\n                          required\n                          onChange={handleInputChange}\n                        >\n                          <option disabled selected>\n                            {\" \"}\n                            --- Please Select ---{\" \"}\n                          </option>\n                          {Materials?.map((material, i) => (\n                            <option value={material} key={i}>\n                              {material}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div className=\"form-group col-md-6 col-lg-6 col-xl-6 required\">\n                        <label htmlFor=\"condition\">\n                          Condition <span className=\"required-f\">*</span>\n                        </label>\n                        <select\n                          name=\"conditions\"\n                          id=\"conditions\"\n                          required\n                          onChange={handleInputChange}\n                        >\n                          <option disabled selected>\n                            {\" \"}\n                            --- Please Select ---{\" \"}\n                          </option>\n                          {Condition?.map((condition, i) => (\n                            <option value={condition} key={i}>\n                              {condition}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                      <div className=\"form-group col-md-12 col-lg-12 col-xl-12 required\">\n                        <label htmlFor=\"input-city\">\n                          Price (&#8358;) <span className=\"required-f\">*</span>\n                        </label>\n                        <input\n                          name=\"price\"\n                          id=\"input-city\"\n                          type=\"text\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\"></div>\n                    <div className=\"row\">\n                      <div className=\"form-group col-md-12 col-lg-12 col-xl-12\">\n                        <label htmlFor=\"input-company\">\n                          Automobile Description{\" \"}\n                          <span className=\"required-f\">*</span>\n                        </label>\n                        <textarea\n                          className=\"form-control resize-both\"\n                          rows=\"3\"\n                          name=\"description\"\n                          onChange={handleInputChange}\n                        ></textarea>\n                      </div>\n                    </div>\n                  </fieldset>\n                  <div className=\"order-button-payment\">\n                    {isLoading ? (\n                      <LoadingOverlay />\n                    ) : (\n                      <button\n                        className=\"btn text-white\"\n                        value=\"Place order\"\n                        type=\"submit\"\n                      >\n                        UPLOAD\n                      </button>\n                    )}\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/blog/index.js",["219","220","221"],[],"import React, { useState, useEffect } from \"react\";\nimport AdminLayout from \"../../../../components/admin/Layout\";\nimport FetchApiClient from \"../../../../fetch_api_clients/api\";\nimport { shortenString } from \"../../../../utils/stringManipulation\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nconst AllBlogPage = () => {\n  const router = useRouter();\n  const [data, setData] = useState();\n\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n\n  let apiClient = new FetchApiClient(\"/blog\", token);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      let { response } = await apiClient.get(\"\");\n      console.log(response);\n      if (response) setData(response);\n      else toast.error(\"unable to fetch data\");\n    };\n    fetchMessages();\n  }, []);\n\n  const handleDeleteBlog = async (id) => {\n    let { response } = await apiClient.delete(`/${id}`);\n    if (response) {\n      toast.success(\"successfully deleted\");\n      router.reload();\n    } else {\n      toast.error(\"unable to delete, try again\");\n    }\n  };\n\n  return (\n    <AdminLayout>\n      <div className=\"container mt-5\">\n        <span className=\"d-flex align-items-end justify-content-between mb-3\">\n          <h1\n            className=\"text-center mb-0 \"\n            style={{\n              fontSize: \"30px\",\n            }}\n          >\n            ALL BLOGS\n          </h1>\n          <Link href=\"/dashboard/admin/blog/upload\">\n            <button className=\"btn text-right text-white\">\n              Add Blog{\" \"}\n              <img\n                src=\"https://img.icons8.com/ios/50/add.png\"\n                className=\"icon\"\n              />\n            </button>\n          </Link>\n        </span>\n\n        <table className=\"table table-striped\">\n          <thead className=\"thead-dark text-white\">\n            <tr>\n              <th scope=\"col\" style={{ color: \"white\" }}>\n                Topic\n              </th>\n              <th scope=\"col\" style={{ color: \"white\" }}>\n                Description\n              </th>\n              <th scope=\"col\" style={{ color: \"white\" }}>\n                Date Created\n              </th>\n              <th scope=\"col\" style={{ color: \"white\" }}>\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((msg, index) => (\n              <>\n                <tr key={index}>\n                  <Link href={`/blog/${msg?.id}`}>\n                    <>\n                      <td style={{ cursor: \"pointer\" }}>\n                        {shortenString(msg.name, 20)}\n                      </td>\n                      <td style={{ cursor: \"pointer\" }}>\n                        {shortenString(msg?.description, 40)}\n                      </td>\n                      <td style={{ cursor: \"pointer\" }}>\n                        {new Date(msg.created_at).toLocaleDateString()}\n                      </td>\n                    </>\n                  </Link>\n\n                  <td\n                    style={{\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    <button\n                      style={{\n                        cursor: \"pointer\",\n                        color: \"white\",\n                        backgroundColor: \"red\",\n                        textAlign: \"center\",\n                        borderRadius: \"7px\",\n                      }}\n                      onClick={() => handleDeleteBlog(msg?.id)}\n                    >\n                      delete\n                    </button>\n                  </td>\n                </tr>\n              </>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default AllBlogPage;\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/blog/upload.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/messages.js",["222"],[],"import React, { useState, useEffect } from \"react\";\nimport AdminLayout from \"../../../components/admin/Layout\";\nimport FetchApiClient from \"../../../fetch_api_clients/api\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useRouter } from \"next/router\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst ComplaintsPage = () => {\n  const router = useRouter();\n  const [data, setData] = useState();\n\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n\n  //modal\n  const [showModal, setShowModal] = useState(false);\n  const [modalData, setModalData] = useState();\n\n  const handleModalOpen = (data) => {\n    setShowModal(true);\n    setModalData(data);\n  };\n\n  const handleModalClose = () => setShowModal(false);\n  //modal\n\n  let apiClient = new FetchApiClient(\"/admin\", token);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      let { response } = await apiClient.get(\"/all_contact_message\");\n      if (response) setData(response);\n      else toast.error(\"unable to fetch data\");\n    };\n    fetchMessages();\n  }, []);\n\n  const handleDeleteMessage = async (id) => {\n    let { response } = await apiClient.delete(`/contact_message/${id}`);\n    if (response) {\n      toast.success(\"message deleted successfully\");\n      router.reload();\n    } else {\n      toast.error(\"unable to delete\");\n    }\n  };\n\n  return (\n    <AdminLayout>\n      <div className=\"container mt-5\">\n        <h1\n          className=\"text-center mb-4 \"\n          style={{\n            fontSize: \"30px\",\n          }}\n        >\n          Messages\n        </h1>\n        <table className=\"table table-striped\">\n          <thead className=\"thead-dark text-white\">\n            <tr>\n              <th scope=\"col\" style={{ color: \"white\" }}>\n                Name\n              </th>\n              <th scope=\"col\" style={{ color: \"white\" }}>\n                Email\n              </th>\n\n              <th scope=\"col\" style={{ color: \"white\" }}>\n                Date\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((msg, index) => (\n              <tr key={index} style={{ cursor: \"pointer\" }}>\n                <td onClick={() => handleModalOpen(msg)}>{msg.fullName}</td>\n                <td onClick={() => handleModalOpen(msg)}>{msg.email}</td>\n                <td onClick={() => handleModalOpen(msg)}>\n                  {new Date(msg.created_at).toLocaleDateString()}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <Modal show={showModal} onHide={handleModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title\n            style={{\n              fontSize: \"1.3rem\",\n              fontWeight: \"bold\",\n              lineHeight: \"1.5\",\n              color: \"#3c171773\",\n            }}\n          >\n            MESSAGES\n          </Modal.Title>\n          <br />\n        </Modal.Header>\n        <Modal.Body>\n          <table className=\"table\">\n            <thead\n              style={{\n                fontSize: \"1.3rem\",\n                fontWeight: \"bold\",\n                lineHeight: \"1.5\",\n              }}\n            >\n              <h1>{modalData?.message}</h1>\n            </thead>{\" \"}\n            <br />\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <td>{modalData?.fullName}</td>\n              </tr>\n              <tr>\n                <th>Email</th>\n                <td>{modalData?.email}</td>\n              </tr>\n              <tr>\n                <th>Telephone</th>\n                <td>{modalData?.telephone}</td>\n              </tr>\n            </tbody>\n            <tfoot>\n              <th>Message Sent at</th>\n              <td>{new Date(modalData?.created_at).toLocaleDateString()}</td>\n            </tfoot>\n          </table>\n        </Modal.Body>\n\n        <Modal.Footer className=\"justify-content-start\">\n          <Button\n            variant=\"danger\"\n            onClick={() => {\n              handleDeleteMessage(modalData?.id);\n              handleModalClose();\n            }}\n            style={{ background: \"red\", color: \"white\" }}\n          >\n            Delete\n          </Button>\n        </Modal.Footer>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleModalClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </AdminLayout>\n  );\n};\n\nexport default ComplaintsPage;\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/profile.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/dashboard/admin/user.js",["223"],[],"import React, { useState, useEffect } from \"react\";\nimport AdminLayout from \"../../../components/admin/Layout\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport ConfirmationInput from \"../../../components/Confirmation\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useRouter } from \"next/router\";\nimport { shortenString } from \"../../../utils/stringManipulation\";\n\nconst UserLogistics = () => {\n  const router = useRouter();\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n\n  const [data, setData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalData, setModalData] = useState();\n  const [deleteConfirmation, setDeleteConfirmation] = useState(false);\n  const [hideConfirmationModal, setHideConfirmationModal] = useState(true);\n\n  useEffect(() => {\n    const fetchLogistics = async () => {\n      try {\n        console.log(data);\n        const response = await fetch(\"/admin/user\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          const res = await response.json();\n          throw new Error(res.msg);\n        }\n        const res = await response.json();\n        setData(res.msg);\n        console.log(res.msg);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchLogistics();\n  }, []);\n\n  const handleModalOpen = (item) => {\n    setShowModal(true);\n    setModalData(item);\n  };\n  const handleModalClose = () => setShowModal(false);\n\n  const deletePackage = async () => {\n    // setIsLoadingDeleteStatus(true);\n    try {\n      const response = await fetch(`/admin/user/delete/${modalData?.id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) {\n        // setIsLoadingDeleteStatus(false);\n        const res = await response.json();\n        throw new Error(res?.msg);\n      }\n      const res = await response.json();\n      toast.success(res?.msg);\n      // setIsLoadingDeleteStatus(false);\n      router.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <AdminLayout>\n      <div className=\"table-responsive\">\n        <h1>\n          PLATFORM USER : <b>{data.length}</b>\n        </h1>\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">FIRST NAME</th>\n              <th scope=\"col\">LAST NAME</th>\n              <th scope=\"col\">EMAIL</th>\n              <th scope=\"col\">TELEPHONE</th>\n              <th scope=\"col\">ADDRESS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data?.map((item) => (\n              <tr\n                key={item?.id}\n                onClick={() => handleModalOpen(item)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <td>{item?.id}</td>\n                <td>{item?.firstName}</td>\n                <td>{item?.lastName}</td>\n                <td>{shortenString(item?.email, 10)}</td>\n                <td>{item?.telephone}</td>\n                <td>{shortenString(item?.address, 15)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div style={{ overflow: \"auto\" }}>\n        <Modal show={showModal} onHide={handleModalClose}>\n          <Modal.Header closeButton>\n            <button\n              style={{\n                backgroundColor: modalData?.paid ? \"green\" : \"red\",\n                color: \"white\",\n                padding: \"2px 3px\",\n                borderRadius: \"5px\",\n                cursor: \"pointer\",\n              }}\n              disabled={modalData?.status == \"delivered\" ? true : false}\n            >\n              ID - {modalData?.id}\n            </button>\n          </Modal.Header>\n          <Modal.Body>\n            <table className=\"table\">\n              <thead\n                style={{\n                  fontSize: \"1.3rem\",\n                  fontWeight: \"bold\",\n                  lineHeight: \"1.5\",\n                }}\n              >\n                User&nbsp;Details\n              </thead>{\" \"}\n              <br />\n              <tbody>\n                <tr>\n                  <th>USER ID</th>\n                  <td>{modalData?.id}</td>\n                </tr>\n                <tr>\n                  <th>FIRST NAME</th>\n                  <td>{modalData?.firstName}</td>\n                </tr>\n                <tr>\n                  <th>LAST NAME</th>\n                  <td>{modalData?.lastName}</td>\n                </tr>\n                <tr>\n                  <th>EMAIL</th>\n                  <td>{modalData?.email}</td>\n                </tr>\n                <tr>\n                  <th>TELEPHONE</th>\n                  <td>{modalData?.telephone}</td>\n                </tr>\n                <tr>\n                  <th>ADDRESS</th>\n                  <td>{modalData?.address}</td>\n                </tr>\n              </tbody>\n              <hr />\n              <tfoot>\n                <th>Date Joined</th>\n                <td>{new Date(modalData?.created_at).toLocaleString()}</td>\n              </tfoot>\n            </table>\n          </Modal.Body>\n          <Modal.Footer className=\"justify-content-start\">\n            <Button\n              variant=\"danger\"\n              onClick={() => {\n                handleModalClose();\n                setHideConfirmationModal(true);\n                setDeleteConfirmation(true);\n              }}\n              style={{ background: \"red\", color: \"white\" }}\n            >\n              Delete Account\n            </Button>{\" \"}\n          </Modal.Footer>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleModalClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {deleteConfirmation ? (\n          <Modal show={hideConfirmationModal}>\n            <ConfirmationInput\n              setConfirmation={setDeleteConfirmation}\n              action={deletePackage}\n              title={`to delete user account with id :.'${modalData?.id}'`}\n            />\n\n            <Modal.Footer>\n              <Button\n                variant=\"error\"\n                onClick={() => setHideConfirmationModal(false)}\n              >\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        ) : null}\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default UserLogistics;\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/index.js",["224","225","226","227","228","229","230","231"],[],"import Layout from \"../components/Layout\";\nimport Link from \"next/link\";\nimport React, { Fragment } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Layout title=\"Landing\">\n        <div id=\"index\">\n          <div className=\"d1\">\n            <h1>\n              <b style={{ color: \"green\" }}>Taharish Automobile</b>: Unmatched\n              Excellence in Car Sales & Repairs\n            </h1>\n            <p className=\"p1\">\n              &quot;Discover Luxury. Experience Performance. Uncompromising\n              Quality.&quot;\n            </p>\n\n            <div className=\"d1\">\n              <Link href=\"/automobile\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <p>\n                    <em>Get Your Dream Car</em>\n                  </p>\n                </span>\n              </Link>\n            </div>\n          </div>\n          <div className=\"d2\">\n            <Carousel controls={false}>\n              <Carousel.Item interval={2500}>\n                <img src=\"/images/range.png\" />\n              </Carousel.Item>\n              <Carousel.Item interval={2500}>\n                <img src=\"/images/cari.png\" />\n              </Carousel.Item>\n              <Carousel.Item interval={2500}>\n                <img src=\"/images/range2.png\" />\n              </Carousel.Item>\n              <Carousel.Item interval={2500}>\n                <img src=\"/images/car2i.png\" />\n              </Carousel.Item>\n            </Carousel>\n          </div>\n        </div>\n      </Layout>\n    </Fragment>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/login.js",["232","233"],[],"import React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useForm } from \"react-hook-form\";\n// import { useMutation } from 'react-query';\nimport { useRouter } from \"next/router\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Layout from \"../components/Layout\";\nimport FetchApiClient from \"../fetch_api_clients/api\";\n\nexport default function Login() {\n  let apiClient = new FetchApiClient(\"/user\");\n\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const router = useRouter();\n  const { handleSubmit } = useForm();\n\n  const handleInputChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n  const submitLoginDetails = async () => {\n    setIsLoading(true);\n\n    let { response, error } = await apiClient.post(\"/login\", data);\n    if (response) {\n      localStorage.setItem(\"token\", response);\n      setIsLoading(false);\n      console.log(\"hello\");\n      router.back();\n    } else {\n      setIsLoading(false);\n      toast.error(error);\n    }\n  };\n\n  return (\n    <Layout title=\"Login\">\n      <div id=\"page-content\">\n        <img\n          src=\"/images/tahicon.png\"\n          width={80}\n          className=\"mx-4 my-2 text-center\"\n        />\n        <div className=\"page section-header text-center\">\n          <div className=\"page-title\">\n            <div className=\"wrapper\">\n              <h1 className=\"mx-2\">Login</h1>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 main-col offset-md-3\">\n              <div className=\"mb-4\">\n                <form\n                  method=\"post\"\n                  action=\"#\"\n                  id=\"CustomerLoginForm\"\n                  acceptCharset=\"UTF-8\"\n                  className=\"contact-form\"\n                  onSubmit={handleSubmit(submitLoginDetails)}\n                >\n                  <div className=\"row\">\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"CustomerEmail\">Email</label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"CustomerEmail\"\n                          autoCorrect=\"off\"\n                          autoCapitalize=\"off\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"CustomerPassword\">Password</label>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder=\"\"\n                          id=\"CustomerPassword\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"text-center col-12 col-sm-12 col-md-12 col-lg-12\">\n                      {isLoading ? (\n                        <input value=\"loading...\" className=\"btn mb-3\"></input>\n                      ) : (\n                        <input\n                          type=\"submit\"\n                          className=\"btn mb-3\"\n                          value=\"Sign In\"\n                        />\n                      )}\n                      <p\n                        className=\"mb-4\"\n                        style={{ color: \"black\", cursor: \"pointer\" }}\n                      >\n                        {/* <a href=\"#\" id=\"RecoverPassword\">\n                          Forgot your password?\n                        </a>{' '}\n                        &nbsp; | &nbsp; */}\n                        New User ?{\" \"}\n                        <Link href=\"/register\" id=\"customer_register_link\">\n                          <b style={{ color: \"#6e0000\" }}>Create Account </b>\n                        </Link>\n                      </p>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/pages/register.js",["234","235"],[],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Layout from \"../components/Layout\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport FetchApiClient from \"../fetch_api_clients/api\";\n\nexport default function Register() {\n  let apiClient = new FetchApiClient(\"/user\");\n\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const router = useRouter();\n\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm();\n\n  const handleInputChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const submitNewUser = async () => {\n    if (data.password !== \"\" && data.cpassword !== \"\") {\n      if (data.password == data.cpassword) {\n        setIsLoading(true);\n        let { response, error } = await apiClient.post(\"/register\", data);\n        if (response) {\n          setIsLoading(false);\n          toast.success(\"successful\");\n          localStorage.setItem(\"token\", response);\n          router.back();\n        } else {\n          setIsLoading(false);\n          toast.error(error);\n        }\n        // try {\n        //   const response = await fetch(\"/user/register\", {\n        //     method: \"POST\",\n        //     headers: {\n        //       \"Content-Type\": \"application/json\",\n        //     },\n        //     body: JSON.stringify(data),\n        //   });\n\n        //   if (!response.ok) {\n        //     const res = await response.json();\n        //     setIsLoading(false);\n        //     throw new Error(res.msg);\n        //   }\n        //   const res = await response.json();\n        //   toast.success(\"successful\");\n        //   localStorage.setItem(\"token\", res);\n        //   setIsLoading(false);\n        //   router.push(\"/\");\n        // } catch (err) {\n        //   setIsLoading(false);\n        //   toast.error(err.message);\n        // }\n        // // return res;\n      } else {\n        toast.error(\"password and confirm password are not equal\");\n      }\n    } else {\n      toast.error(\"please fill in the details correctly\");\n    }\n  };\n  return (\n    <Layout title=\"Register\">\n      <div id=\"page-content\">\n        <img src=\"/images/tahicon.png\" width={80} className=\"mx-4 my-2\" />\n        <div className=\"page section-header text-center\">\n          <div className=\"page-title\">\n            <div className=\"wrapper\">\n              <h1 className=\"page-width\">Create an Account</h1>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 col-sm-12 col-md-6 col-lg-6 main-col offset-md-3\">\n              <div className=\"mb-4\">\n                <form\n                  onSubmit={handleSubmit(submitNewUser)}\n                  id=\"CustomerLoginForm\"\n                  className=\"contact-form\"\n                >\n                  <div className=\"row\">\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"FirstName\">First Name *</label>\n                        <input\n                          type=\"text\"\n                          name=\"firstName\"\n                          placeholder=\"\"\n                          id=\"firstName\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"LastName\">Last Name *</label>\n                        <input\n                          type=\"text\"\n                          name=\"lastName\"\n                          placeholder=\"\"\n                          id=\"LastName\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"input-telephone\">\n                          Telephone <span className=\"required-f\">*</span>\n                        </label>\n                        <input\n                          name=\"telephone\"\n                          id=\"input-telephone\"\n                          type=\"tel\"\n                          required\n                          {...register(\"telephone\", {\n                            required: \"Please enter telephone number\",\n                            minLength: {\n                              value: 11,\n                              message:\n                                \"telephone number must be exacty 11 numbers\",\n                            },\n                            maxLength: {\n                              value: 11,\n                              message:\n                                \"telephone number must be exacty 11 numbers\",\n                            },\n                          })}\n                          onChange={handleInputChange}\n                        />\n                        {errors.telephone && (\n                          <div className=\"text-danger text-center\">\n                            {errors.telephone.message}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"input-address-1\">\n                          Address <span className=\"required-f\">*</span>\n                        </label>\n                        <input\n                          name=\"address\"\n                          id=\"input-address-1\"\n                          type=\"text\"\n                          required\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"CustomerEmail\">Email *</label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"\"\n                          {...register(\"email\", {\n                            required: \"Please enter email\",\n                            pattern: {\n                              value:\n                                /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$/i,\n                              message: \"Please enter valid email\",\n                            },\n                          })}\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"CustomerPassword\">Password *</label>\n                        <input\n                          type=\"password\"\n                          defaultValue=\"\"\n                          name=\"password\"\n                          id=\"password\"\n                          {...register(\"password\", {\n                            required: \"Please enter password\",\n                            minLength: {\n                              value: 6,\n                              message:\n                                \"password should be more than 6 characters\",\n                            },\n                          })}\n                          onChange={handleInputChange}\n                        />\n                        {errors.password && (\n                          <div className=\"text-danger text-center\">\n                            {errors.password.message}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12\">\n                      <div className=\"form-group\">\n                        <label htmlFor=\"CustomerPassword\">\n                          Confirm Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          defaultValue=\"\"\n                          name=\"cpassword\"\n                          id=\"password\"\n                          placeholder=\"confirm password\"\n                          onChange={handleInputChange}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"text-center col-12 col-sm-12 col-md-12 col-lg-12\">\n                      {isLoading ? (\n                        <input\n                          className=\"btn mb-3\"\n                          value=\"loading...\"\n                          disabled\n                        />\n                      ) : (\n                        <input\n                          type=\"submit\"\n                          className=\"btn mb-3\"\n                          value=\"submit\"\n                        />\n                      )}\n\n                      <p\n                        className=\"mb-4 text-center\"\n                        style={{ color: \"black\", cursor: \"pointer\" }}\n                      >\n                        {/* <a href=\"#\" id=\"RecoverPassword\">\n                          Forgot your password?\n                        </a>{' '}\n                        &nbsp; | &nbsp; */}\n                        Already a memeber ?{\" \"}\n                        <Link href=\"/login\" id=\"customer_register_link\">\n                          <b style={{ color: \"#6e0000\" }}>sign in </b>\n                        </Link>\n                      </p>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/Confirmation.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/Footer.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/Layout.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/admin/Layout.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253"],[],"import React, { useRef, useState, useEffect, Fragment } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { getInitials, shortenString } from \"../../utils/stringManipulation\";\nimport jwtDecode from \"jwt-decode\";\nimport logout from \"../../utils/logout\";\nimport PageAuthentication from \"../../hooks/useAuth\";\nimport Head from \"next/head\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FetchApiClient from \"../../fetch_api_clients/api\";\n\nfunction AdminLayout({ children }) {\n  const [noOfContactMessages, setNoOfContactMessages] = useState(null);\n\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n\n  let apiClient = new FetchApiClient(\"/admin\", token);\n\n  const [user, setUser] = useState();\n  const asideRef = useRef();\n  const router = useRouter();\n\n  useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [token]);\n\n  const userlogout = () => {\n    let out = logout();\n\n    if (out) router.push(\"/login\");\n  };\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      let { response } = await apiClient.get(\"/all_contact_message\");\n      setNoOfContactMessages(response?.length);\n    };\n\n    fetchMessages();\n  }, []);\n  return (\n    <Fragment>\n      <Head>\n        <title>Admin - Kupon </title>\n        <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\n        <meta\n          name=\"description\"\n          content=\"Get your automobile here for a good price\"\n        />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"shortcut icon\" href=\"/images/tahicon.png\" />\n      </Head>\n      <ToastContainer position=\"bottom-center\" />\n      <PageAuthentication>\n        <main id=\"account\">\n          <aside ref={asideRef}>\n            <div className=\"profile\">\n              <span>\n                <span\n                  style={{\n                    color: \"white\",\n                    backgroundColor: \"black\",\n                    borderRadius: \"50%\",\n                    padding: \"3px\",\n                  }}\n                >\n                  {getInitials(user?.firstName, user?.lastName)}\n                </span>\n                <p>\n                  Admin -{\" \"}\n                  {shortenString(user?.firstName + \" \" + user?.lastName, 10)}\n                </p>\n              </span>\n\n              <img\n                id=\"cancel\"\n                src=\"https://img.icons8.com/ios/50/FD7E14/cancel.png\"\n                onClick={() => asideRef.current.classList.remove(\"menu\")}\n              />\n            </div>\n\n            <div className=\"side_links\">\n              <Link href=\"/\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/home-page--v1.png\"\n                    className=\"icon\"\n                  />\n                  <b>Home</b>\n                </span>\n              </Link>\n              <hr />\n              <Link href=\"/dashboard/admin/profile\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/user.png\"\n                    className=\"icon\"\n                  />\n                  <b>My Profile</b>\n                </span>\n              </Link>\n              <hr />\n\n              <Link href=\"/dashboard/admin/user\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/stickers/100/null/user-skin-type-3.png\"\n                    className=\"icon\"\n                  />\n                  <b>User</b>\n                </span>\n              </Link>\n              <hr />\n\n              <Link href=\"/dashboard/admin/blog\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/book.png\"\n                    className=\"icon\"\n                  />\n                  <b>Blog</b>\n                </span>\n              </Link>\n              <hr />\n\n              <Link href=\"/dashboard/admin/automobile\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    className=\"icon\"\n                    src=\"https://img.icons8.com/ios/50/automotive.png\"\n                    alt=\"automotive\"\n                  />\n                  <b>Automobile</b>\n                </span>\n              </Link>\n              <hr />\n\n              <Link href=\"/dashboard/admin/messages\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/ios/50/messages-mac.png\"\n                    className=\"icon\"\n                  />\n\n                  <b>Messages({noOfContactMessages})</b>\n                </span>\n              </Link>\n              <hr />\n\n              <span style={{ cursor: \"pointer\" }} onClick={() => userlogout()}>\n                <img\n                  src=\"https://img.icons8.com/ios/50/FD7E14/logout-rounded--v1.png\"\n                  className=\"icon\"\n                />\n                <b>Logout</b>\n              </span>\n            </div>\n          </aside>\n\n          <section className=\"main_container\">\n            <header>\n              <div>\n                <img\n                  id=\"menu\"\n                  src=\"https://img.icons8.com/ios-filled/50/000000/menu--v1.png\"\n                  onClick={() => asideRef.current.classList.add(\"menu\")}\n                />\n\n                <h3>Admin - Settings</h3>\n                <p style={{ opacity: \"0.7\" }}>\n                  Manage your personal and organization settings\n                </p>\n              </div>\n            </header>\n\n            <article>{children}</article>\n          </section>\n        </main>\n      </PageAuthentication>\n    </Fragment>\n  );\n}\n\nexport default AdminLayout;\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/chart.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/loadingOverlay.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/Nav.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/mainHeader.js",["254","255","256","257","258","259","260"],[],"import React, { useState, Fragment, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport jwtDecode from \"jwt-decode\";\nimport { getInitials } from \"../../utils/stringManipulation\";\nimport logout from \"../../utils/logout\";\nimport { useRouter } from \"next/router\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nexport default function MainHeader() {\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n  const [user, setUser] = useState({});\n  const [avatarMenu, setAvatarMenu] = useState(false);\n  const router = useRouter();\n\n  useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [token]);\n\n  const userlogout = () => {\n    let out = logout();\n    if (out) router.push(\"/login\");\n  };\n\n  return (\n    //  <!--Header-->\n    <Fragment>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">\n          <img\n            src=\"/images/tahicon.png\"\n            width=\"60\"\n            className=\"d-inline-block align-top\"\n            alt=\"Logo\"\n          />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"navbar-nav\" />\n        <Navbar.Collapse id=\"navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\" className=\"text-uppercase mx-3\">\n              Home\n            </Nav.Link>\n            <Nav.Link href=\"/about\" className=\"text-uppercase mx-3\">\n              About Us\n            </Nav.Link>\n            <Nav.Link href=\"/contact\" className=\"text-uppercase mx-3\">\n              Contact Us\n            </Nav.Link>\n            <Nav.Link href=\"/blog\" className=\"text-uppercase mx-3\">\n              Blog\n            </Nav.Link>\n            <Nav.Link href=\"/automobile\" className=\"text-uppercase mx-3\">\n              CAR SHOP\n            </Nav.Link>\n          </Nav>\n          <Nav>\n            <nav\n              className=\"navbar navbar-expand-lg\"\n              style={{ position: \"relative\", zIndex: \"100\" }}\n            >\n              <div className=\"container-fluid\">\n                <ul\n                  className=\"navbar-nav\"\n                  style={{ position: \"absolute\", right: \"0px\" }}\n                >\n                  {/* <!-- Avatar Menu --> */}\n                  {!Object.keys(user).length ? (\n                    <li>\n                      <Link href=\"/login\">\n                        <small\n                          style={{\n                            fontSize: \"15px\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          {\" \"}\n                          sign in{\" \"}\n                        </small>\n                      </Link>\n                      <Link href=\"register\">\n                        <small\n                          style={{\n                            backgroundColor: \"black\",\n                            color: \"white\",\n                            padding: \"2px\",\n                            fontSize: \"15px\",\n                            cursor: \"pointer\",\n                            borderRadius: \"3px\",\n                          }}\n                          className=\"d-sm-inline\"\n                        >\n                          {\" \"}\n                          sign&nbsp;up{\" \"}\n                        </small>\n                      </Link>\n                    </li>\n                  ) : (\n                    <li className=\"nav-item dropdown\">\n                      <a\n                        className=\"nav-link dropdown-toggle d-flex align-items-center\"\n                        href=\"#\"\n                        id=\"navbarDropdownMenuLink\"\n                        role=\"button\"\n                        data-mdb-toggle=\"dropdown\"\n                        aria-expanded=\"false\"\n                        onClick={() => setAvatarMenu(!avatarMenu)}\n                      >\n                        <p\n                          style={{\n                            color: \"white\",\n                            background: \"green\",\n                            borderRadius: \"50%\",\n                            padding: \"3px\",\n                          }}\n                        >\n                          {getInitials(user?.firstName, user?.lastName)}\n                        </p>\n                      </a>\n                      {avatarMenu ? (\n                        <ul\n                          className=\"bg-light position-absolute\"\n                          aria-labelledby=\"navbarDropdownMenuLink\"\n                          style={{ left: \"-50px\" }}\n                        >\n                          {user?.admin == \"yes\" && (\n                            <li\n                              className=\"dropdown-item\"\n                              style={{ cursor: \"pointer\" }}\n                            >\n                              <Link href={`/dashboard/admin/profile`}>\n                                <span>\n                                  <img\n                                    src=\"https://img.icons8.com/ios/50/null/administrator-male--v1.png\"\n                                    width={15}\n                                  />{\" \"}\n                                  Admin\n                                </span>\n                              </Link>\n                            </li>\n                          )}\n                          <li\n                            className=\"dropdown-item\"\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            <Link href={`/dashboard/user/profile`}>\n                              <span>\n                                <img\n                                  src=\"https://img.icons8.com/ios-filled/50/null/user.png\"\n                                  width={15}\n                                />{\" \"}\n                                Profile\n                              </span>\n                            </Link>\n                          </li>\n\n                          <li\n                            className=\"dropdown-item\"\n                            style={{ cursor: \"pointer\" }}\n                            onClick={() => userlogout()}\n                          >\n                            <span>\n                              <img\n                                src=\"https://img.icons8.com/ios-filled/50/null/logout-rounded.png\"\n                                width={15}\n                              />{\" \"}\n                              Logout\n                            </span>\n                          </li>\n                        </ul>\n                      ) : null}\n                    </li>\n                  )}\n                </ul>\n              </div>\n            </nav>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </Fragment>\n  );\n}\n","/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/mobileHeader.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/search.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/mainNav/topHeader.js",[],[],"/home/mgenius/Desktop/WEB PROGRAMMING/TAHARISH_AUTOMOBILE/components/user/Layout.js",["261","262","263","264","265","266","267","268","269","270","271","272","273","274"],[],"import React, { useRef, useState, useEffect, Fragment } from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport { getInitials, shortenString } from \"../../utils/stringManipulation\";\nimport jwtDecode from \"jwt-decode\";\nimport logout from \"../../utils/logout\";\nimport PageAuthentication from \"../../hooks/useAuth\";\nimport Head from \"next/head\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction UserLayout({ children }) {\n  const [token] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"token\");\n    }\n  });\n  const [user, setUser] = useState();\n  const asideRef = useRef();\n  const router = useRouter();\n\n  useEffect(() => {\n    try {\n      let decoded = jwtDecode(token);\n      setUser(decoded);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [token]);\n\n  const userlogout = () => {\n    let out = logout();\n    if (out) router.push(\"/login\");\n  };\n  return (\n    <Fragment>\n      <Head>\n        <title>User - Kupon </title>\n        <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <meta httpEquiv=\"x-ua-compatible\" content=\"ie=edge\" />\n        <meta name=\"description\" content=\"description\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"shortcut icon\" href=\"/images/kupon icon.png\" />\n      </Head>\n      <ToastContainer position=\"bottom-center\" />\n      <PageAuthentication>\n        <main id=\"account\">\n          <aside ref={asideRef}>\n            <div className=\"profile\">\n              <span>\n                <span\n                  style={{\n                    color: \"white\",\n                    backgroundColor: \"black\",\n                    borderRadius: \"50%\",\n                    padding: \"3px\",\n                  }}\n                >\n                  {getInitials(user?.firstName, user?.lastName)}\n                </span>\n                <p>\n                  {shortenString(user?.firstName + \" \" + user?.lastName, 15)}\n                </p>\n              </span>\n\n              <img\n                id=\"cancel\"\n                src=\"https://img.icons8.com/ios/50/FD7E14/cancel.png\"\n                onClick={() => asideRef.current.classList.remove(\"menu\")}\n              />\n            </div>\n\n            <div className=\"side_links\">\n              <Link href=\"/home\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/home-page--v1.png\"\n                    className=\"icon\"\n                  />\n                  <b>Home</b>\n                </span>\n              </Link>\n\n              <Link href=\"profile\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/user.png\"\n                    className=\"icon\"\n                  />\n                  <b>Profile</b>\n                </span>\n              </Link>\n\n              <Link href=\"logistics\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/ios-glyphs/30/FD7E14/food-truck.png\"\n                    className=\"icon\"\n                  />\n                  <b>Logistics</b>\n                </span>\n              </Link>\n\n              <Link href=\"market\">\n                <span style={{ cursor: \"pointer\" }}>\n                  <img\n                    src=\"https://img.icons8.com/material-outlined/24/FD7E14/shopping-cart--v1.png\"\n                    className=\"icon\"\n                  />\n                  <b>Market</b>\n                </span>\n              </Link>\n\n              {/* <Link href=\"notification\">\n                <span style={{ cursor: 'pointer' }}>\n                  <img\n                    src=\"https://img.icons8.com/ios/50/FD7E14/push-notifications.png\"\n                    className=\"icon\"\n                  />\n                  <b>Notification</b>\n                </span>\n              </Link> */}\n\n              <span style={{ cursor: \"pointer\" }} onClick={() => userlogout()}>\n                <img\n                  src=\"https://img.icons8.com/ios/50/FD7E14/logout-rounded--v1.png\"\n                  className=\"icon\"\n                />\n                <b>Logout</b>\n              </span>\n              {/* <span>\n              <img src={collapse} className=\"icon\" alt=\"lynue home\" />\n              <b>Collapse</b>\n            </span> */}\n            </div>\n          </aside>\n\n          <section className=\"main_container\">\n            <header>\n              <div>\n                <img\n                  id=\"menu\"\n                  src=\"https://img.icons8.com/ios-filled/50/000000/menu--v1.png\"\n                  onClick={() => asideRef.current.classList.add(\"menu\")}\n                />\n                {/* <div className=\"alert alert-primary\" role=\"alert\">\n                <h3 className=\"h1 text-center\"> Admin</h3>\n              </div> */}\n                <h3>User - Settings</h3>\n                <p style={{ opacity: \"0.7\" }}>Manage your personal settings</p>\n              </div>\n              {/* <nav>\n                <ul style={{ listStyle: 'none', margin: '10px' }}>\n                  <li style={{ margin: '10px' }}>\n                    <Link href=\"profile\">Profile</Link>\n                  </li>\n                  <li style={{ margin: '10px' }}>\n                    <Link href=\"password\">Password</Link>\n                  </li>\n                </ul>\n              </nav> */}\n            </header>\n\n            <article>{children}</article>\n          </section>\n        </main>\n      </PageAuthentication>\n    </Fragment>\n  );\n}\n\nexport default UserLayout;\n",{"ruleId":"275","severity":1,"message":"276","line":12,"column":11,"nodeType":"277","endLine":12,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":13,"column":11,"nodeType":"277","endLine":13,"endColumn":63},{"ruleId":"275","severity":1,"message":"276","line":14,"column":11,"nodeType":"277","endLine":14,"endColumn":69},{"ruleId":"275","severity":1,"message":"276","line":15,"column":11,"nodeType":"277","endLine":15,"endColumn":63},{"ruleId":"275","severity":1,"message":"276","line":16,"column":11,"nodeType":"277","endLine":16,"endColumn":67},{"ruleId":"275","severity":1,"message":"276","line":17,"column":11,"nodeType":"277","endLine":17,"endColumn":63},{"ruleId":"275","severity":1,"message":"276","line":18,"column":11,"nodeType":"277","endLine":18,"endColumn":66},{"ruleId":"275","severity":1,"message":"276","line":19,"column":11,"nodeType":"277","endLine":19,"endColumn":60},{"ruleId":"278","severity":1,"message":"279","line":28,"column":17,"nodeType":"277","endLine":38,"endColumn":19},{"ruleId":"278","severity":1,"message":"279","line":41,"column":17,"nodeType":"277","endLine":51,"endColumn":19},{"ruleId":"278","severity":1,"message":"279","line":54,"column":17,"nodeType":"277","endLine":64,"endColumn":19},{"ruleId":"278","severity":1,"message":"279","line":79,"column":9,"nodeType":"277","endLine":79,"endColumn":75},{"ruleId":"280","severity":1,"message":"281","line":79,"column":9,"nodeType":"277","endLine":79,"endColumn":75},{"ruleId":"282","severity":1,"message":"283","line":35,"column":6,"nodeType":"284","endLine":35,"endColumn":15,"suggestions":"285"},{"ruleId":"278","severity":1,"message":"279","line":90,"column":21,"nodeType":"277","endLine":95,"endColumn":23},{"ruleId":"278","severity":1,"message":"279","line":101,"column":25,"nodeType":"277","endLine":108,"endColumn":27},{"ruleId":"282","severity":1,"message":"286","line":47,"column":6,"nodeType":"284","endLine":47,"endColumn":8,"suggestions":"287"},{"ruleId":"278","severity":1,"message":"279","line":99,"column":11,"nodeType":"277","endLine":104,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":137,"column":25,"nodeType":"277","endLine":143,"endColumn":27},{"ruleId":"278","severity":1,"message":"279","line":146,"column":25,"nodeType":"277","endLine":156,"endColumn":27},{"ruleId":"282","severity":1,"message":"283","line":26,"column":6,"nodeType":"284","endLine":26,"endColumn":12,"suggestions":"288"},{"ruleId":"278","severity":1,"message":"279","line":54,"column":21,"nodeType":"277","endLine":54,"endColumn":79},{"ruleId":"280","severity":1,"message":"281","line":54,"column":21,"nodeType":"277","endLine":54,"endColumn":79},{"ruleId":"280","severity":1,"message":"281","line":58,"column":19,"nodeType":"277","endLine":58,"endColumn":26},{"ruleId":"280","severity":1,"message":"281","line":62,"column":21,"nodeType":"277","endLine":62,"endColumn":28},{"ruleId":"278","severity":1,"message":"279","line":77,"column":25,"nodeType":"277","endLine":77,"endColumn":52},{"ruleId":"280","severity":1,"message":"281","line":77,"column":25,"nodeType":"277","endLine":77,"endColumn":52},{"ruleId":"282","severity":1,"message":"283","line":24,"column":6,"nodeType":"284","endLine":24,"endColumn":8,"suggestions":"289"},{"ruleId":"278","severity":1,"message":"279","line":30,"column":11,"nodeType":"277","endLine":35,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":46,"column":11,"nodeType":"277","endLine":51,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":83,"column":21,"nodeType":"277","endLine":87,"endColumn":23},{"ruleId":"282","severity":1,"message":"283","line":44,"column":6,"nodeType":"284","endLine":44,"endColumn":8,"suggestions":"290"},{"ruleId":"278","severity":1,"message":"279","line":70,"column":15,"nodeType":"277","endLine":73,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":70,"column":15,"nodeType":"277","endLine":73,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":126,"column":23,"nodeType":"277","endLine":131,"endColumn":25},{"ruleId":"282","severity":1,"message":"291","line":39,"column":6,"nodeType":"284","endLine":39,"endColumn":16,"suggestions":"292"},{"ruleId":"282","severity":1,"message":"283","line":30,"column":6,"nodeType":"284","endLine":30,"endColumn":8,"suggestions":"293"},{"ruleId":"278","severity":1,"message":"279","line":57,"column":15,"nodeType":"277","endLine":60,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":57,"column":15,"nodeType":"277","endLine":60,"endColumn":17},{"ruleId":"282","severity":1,"message":"283","line":40,"column":6,"nodeType":"284","endLine":40,"endColumn":8,"suggestions":"294"},{"ruleId":"282","severity":1,"message":"295","line":48,"column":6,"nodeType":"284","endLine":48,"endColumn":8,"suggestions":"296"},{"ruleId":"278","severity":1,"message":"279","line":34,"column":17,"nodeType":"277","endLine":34,"endColumn":48},{"ruleId":"280","severity":1,"message":"281","line":34,"column":17,"nodeType":"277","endLine":34,"endColumn":48},{"ruleId":"278","severity":1,"message":"279","line":37,"column":17,"nodeType":"277","endLine":37,"endColumn":47},{"ruleId":"280","severity":1,"message":"281","line":37,"column":17,"nodeType":"277","endLine":37,"endColumn":47},{"ruleId":"278","severity":1,"message":"279","line":40,"column":17,"nodeType":"277","endLine":40,"endColumn":49},{"ruleId":"280","severity":1,"message":"281","line":40,"column":17,"nodeType":"277","endLine":40,"endColumn":49},{"ruleId":"278","severity":1,"message":"279","line":43,"column":17,"nodeType":"277","endLine":43,"endColumn":48},{"ruleId":"280","severity":1,"message":"281","line":43,"column":17,"nodeType":"277","endLine":43,"endColumn":48},{"ruleId":"278","severity":1,"message":"279","line":40,"column":9,"nodeType":"277","endLine":44,"endColumn":11},{"ruleId":"280","severity":1,"message":"281","line":40,"column":9,"nodeType":"277","endLine":44,"endColumn":11},{"ruleId":"278","severity":1,"message":"279","line":76,"column":9,"nodeType":"277","endLine":76,"endColumn":75},{"ruleId":"280","severity":1,"message":"281","line":76,"column":9,"nodeType":"277","endLine":76,"endColumn":75},{"ruleId":"282","severity":1,"message":"283","line":50,"column":6,"nodeType":"284","endLine":50,"endColumn":8,"suggestions":"297"},{"ruleId":"278","severity":1,"message":"279","line":86,"column":15,"nodeType":"277","endLine":90,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":86,"column":15,"nodeType":"277","endLine":90,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":96,"column":19,"nodeType":"277","endLine":99,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":96,"column":19,"nodeType":"277","endLine":99,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":106,"column":19,"nodeType":"277","endLine":109,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":106,"column":19,"nodeType":"277","endLine":109,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":117,"column":19,"nodeType":"277","endLine":120,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":117,"column":19,"nodeType":"277","endLine":120,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":128,"column":19,"nodeType":"277","endLine":131,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":128,"column":19,"nodeType":"277","endLine":131,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":139,"column":19,"nodeType":"277","endLine":143,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":151,"column":19,"nodeType":"277","endLine":154,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":151,"column":19,"nodeType":"277","endLine":154,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":162,"column":17,"nodeType":"277","endLine":165,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":162,"column":17,"nodeType":"277","endLine":165,"endColumn":19},{"ruleId":"278","severity":1,"message":"279","line":174,"column":17,"nodeType":"277","endLine":178,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":174,"column":17,"nodeType":"277","endLine":178,"endColumn":19},{"ruleId":"278","severity":1,"message":"279","line":38,"column":11,"nodeType":"277","endLine":43,"endColumn":13},{"ruleId":"278","severity":1,"message":"279","line":140,"column":35,"nodeType":"277","endLine":143,"endColumn":37},{"ruleId":"280","severity":1,"message":"281","line":140,"column":35,"nodeType":"277","endLine":143,"endColumn":37},{"ruleId":"278","severity":1,"message":"279","line":155,"column":33,"nodeType":"277","endLine":158,"endColumn":35},{"ruleId":"280","severity":1,"message":"281","line":155,"column":33,"nodeType":"277","endLine":158,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":170,"column":31,"nodeType":"277","endLine":173,"endColumn":33},{"ruleId":"280","severity":1,"message":"281","line":170,"column":31,"nodeType":"277","endLine":173,"endColumn":33},{"ruleId":"278","severity":1,"message":"279","line":66,"column":15,"nodeType":"277","endLine":70,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":66,"column":15,"nodeType":"277","endLine":70,"endColumn":17},{"ruleId":"278","severity":1,"message":"279","line":76,"column":19,"nodeType":"277","endLine":79,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":76,"column":19,"nodeType":"277","endLine":79,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":86,"column":19,"nodeType":"277","endLine":89,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":86,"column":19,"nodeType":"277","endLine":89,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":96,"column":19,"nodeType":"277","endLine":99,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":96,"column":19,"nodeType":"277","endLine":99,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":106,"column":19,"nodeType":"277","endLine":109,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":106,"column":19,"nodeType":"277","endLine":109,"endColumn":21},{"ruleId":"278","severity":1,"message":"279","line":125,"column":17,"nodeType":"277","endLine":128,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":125,"column":17,"nodeType":"277","endLine":128,"endColumn":19},{"ruleId":"278","severity":1,"message":"279","line":141,"column":17,"nodeType":"277","endLine":145,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":141,"column":17,"nodeType":"277","endLine":145,"endColumn":19},"@next/next/no-css-tags","Do not include stylesheets manually. See: https://nextjs.org/docs/messages/no-css-tags","JSXOpeningElement","@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiClient'. Either include it or remove the dependency array.","ArrayExpression",["298"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["299"],["300"],["301"],["302"],"React Hook useEffect has missing dependencies: 'data' and 'fileUploadError'. Either include them or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["303"],["304"],["305"],"React Hook useEffect has missing dependencies: 'data' and 'token'. Either include them or remove the dependency array.",["306"],["307"],{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"314","fix":"316"},{"desc":"317","fix":"318"},{"desc":"314","fix":"319"},{"desc":"314","fix":"320"},{"desc":"321","fix":"322"},{"desc":"314","fix":"323"},"Update the dependencies array to be: [apiClient, product]",{"range":"324","text":"325"},"Update the dependencies array to be: [token]",{"range":"326","text":"327"},"Update the dependencies array to be: [apiClient, blog]",{"range":"328","text":"329"},"Update the dependencies array to be: [apiClient]",{"range":"330","text":"331"},{"range":"332","text":"331"},"Update the dependencies array to be: [data, fileUploadError, imageUrl]",{"range":"333","text":"334"},{"range":"335","text":"331"},{"range":"336","text":"331"},"Update the dependencies array to be: [data, token]",{"range":"337","text":"338"},{"range":"339","text":"331"},[1210,1219],"[apiClient, product]",[1468,1470],"[token]",[806,812],"[apiClient, blog]",[751,753],"[apiClient]",[1431,1433],[1197,1207],"[data, fileUploadError, imageUrl]",[953,955],[1160,1162],[1534,1536],"[data, token]",[1398,1400]]